
set nocompatible              " be iMproved

" Vundle {{{
filetype off                  " required!

set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()

" let Vundle manage Vundle
" required!
Plugin 'VundleVim/Vundle.vim'

" My Plugins here:
"
" Colors
Plugin 'chriskempson/base16-vim'

" Languages
Plugin 'tmux-plugins/vim-tmux'
Plugin 'gabrielelana/vim-markdown'
Plugin 'ekalinin/Dockerfile.vim'
Plugin 'kchmck/vim-coffee-script'
Plugin 'fatih/vim-go'
Plugin 'pangloss/vim-javascript'
Plugin 'leshill/vim-json'
Plugin 'martinda/Jenkinsfile-vim-syntax'
Plugin 'hashivim/vim-terraform'

" Other
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'tpope/vim-commentary'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'tpope/vim-unimpaired'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'airblade/vim-gitgutter'
Plugin 'Valloric/YouCompleteMe'

call vundle#end()
filetype plugin indent on     " required!

" }}}


" Configurations that follow are based on http://nvie.com/posts/how-i-boosted-my-vim/

" change the mapleader from \ to ,
let mapleader=","

" VIM behavior {{{
set hidden                              " allow to switch buffer with unwritten changes
set nowrap                              " don't wrap lines
set tabstop=4                           " a tab is 4 spaces
set expandtab                           " use spaces instead of tabs
set backspace=indent,eol,start          " allow backspacing over everything in insert mode
set autoindent                          " always set autoindenting to on
set copyindent                          " copy the previous indentation on autoindentin
set shiftwidth=4                        " number of spaces to use for autoindenting
set shiftround                          " use multiple of shiftwidth when indenting with '<' and '>'
set showmatch                           " set show matching parenthesis
set ignorecase                          " ignore case when searching
set smartcase                           " ignore case if search pattern is all lowercase, case-sensitive otherwise
set smarttab                            " insert tabs on the start of a line according to shiftwidth not tabstop
set hlsearch                            " highlight search terms
set incsearch                           " show search matches as you type
set history=10000                       " remember more commands and search history
set undolevels=10000                    " use many muchos levels of undo
set wildignore=*.swp,*.bak,*.pyc,*.class
set title                               " change the terminal's title
set visualbell                          " don't beep
set noerrorbells                        " don't beep
set nobackup
set noswapfile
syntax on
set list                                        " highlight whitespaces
set listchars=tab:▸\ ,trail:·,extends:#,nbsp:·  " highlight whitespaces
set wildmenu                            " show command completion matches highlights
set virtualedit=all                     " allow the cursor to go in to "invalid" places
set clipboard=unnamed                   " alias unnamed register to the + register, which is the X Window clipboard
set cpoptions+=$                        " show dollar sign when changing
set cursorline                          " highlight current line
set colorcolumn=80                      " show margin at 80 characters
set laststatus=2                        " status line always visible
set spelllang=en_us                     " set the locale for spell check
" set mouse=a                             " make mouse scroling work

" disable arrow keys to force using VIM keys
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>

" Disable re-indent when typing ':' which messes up YAML files
"autocmd FileType yaml setlocal indentkeys-=<:>

autocmd FileType coffee setlocal tabstop=2 shiftwidth=2 expandtab
" }}}

" Color Scheme {{{
" -- Base16 --
set encoding=utf8
let base16colorspace=256
set t_Co=256
execute "set background=".$BACKGROUND
execute "colorscheme ".$THEME."-".$BACKGROUND
" }}}

" Airline {{{
let g:airline_powerline_fonts=1
let g:airline_theme='base16'
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tabline#left_sep=''
let g:airline#extensions#tabline#left_alt_sep='|'
" }}}

" CtrlP {{{
let g:ctrlp_map='<c-p>'
let g:ctrlp_cmd='CtrlPMixed'
let g:ctrlp_working_path_mode='r'
" }}}

" vim-flavored-markdown {{{
" augroup markdown
"     au!
"     au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown textwidth=80
" augroup END
" }}}

" vim-markdown {{{
augroup markdown
    au!
    au BufNewFile,BufRead *.md setlocal textwidth=80
augroup END
" }}}

" vim-coffee-script {{{
autocmd BufNewFile,BufReadPost *.coffee setlocal foldmethod=indent nofoldenable
" }}}

" vim-javascript {{{
autocmd BufNewFile,BufReadPost *.js setlocal foldmethod=syntax nofoldenable shiftwidth=2 tabstop=2
" }}}

autocmd BufNewFile,BufRead Jenkinsfile setlocal syntax=groovy foldmethod=indent nofoldenable

" vim-terraform {{{
let g:terraform_align=1
let g:terraform_fold_sections=1
autocmd FileType terraform setlocal commentstring=#%s
" }}}

if exists('$ITERM_PROFILE')
    let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
    let &t_SR = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=2\x7\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
    let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>[6 q\<Esc>\\"
    let &t_SR = "\<Esc>Ptmux;\<Esc>\<Esc>[4 q\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>[2 q\<Esc>\\"
endif
